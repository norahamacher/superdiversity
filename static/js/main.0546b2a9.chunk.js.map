{"version":3,"sources":["images/bivariate_scheme1.png","MapFunctions.js","Helpers.js","Menu.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","MapFunctionsVancouver","m_initiated","map","this","center","props","city","m_tilesets","mapboxgl","accessToken","Map","container","style","zoom","on","addSource","type","data","cluster","i","length","sourceName","url","id","index","year","addLayer","source","layout","visibility","sourcelayer","paint","heightParam","getCanvas","cursor","tooltipContainer","document","createElement","console","log","init","prevProps","val","parameter","highest","features","properties","getHighestValue","setPaintProperty","getSource","setData","height","className","Component","MapFunctions","state","subItem","width","color","bivariate","activeWidth","activeHeight","activeColor","activeBivariate","changeWidth","event","target","value","setState","callbackF","changeHeight","changeColor","changeBivariate1","arr","changeBivariate2","toggleActive","y","toggleAttribute","attr","prevState","handleChange","cities","name","years","onChange","key","item","onClick","indices","children","title","app","def","callback","active","callback1","callback2","currentCity","currentYear","AttributeSection","child","App","m_datasets","centerData96Auckland","centerData13Auckland","centerData06Melb","centerData11Melb","centerData16Melb","centerData2001Syd","centerData2006Syd","centerData2011Syd","centerData2016Syd","centerData96Vanc","centerData06Vanc","centerData16Vanc","m_biVariateColors","m_selectorStructure","m_long_indices","m_short_indices","m_menu_structure","prepDatasets","dataset","newGeometry","j","turf","geometry","coordinates","steps","propertyKeys","Object","keys","indexOf","renameKey","object","newKey","undefined","clonedObj","clone","targetKey","heightParameter","showBivariate","showColor","menuCallback","label","content","calculateHeights","src","bivariateImage","alt","obj","assign","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0546b2a9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bivariate_scheme1.a9095b3d.png\";","import mapboxgl from 'mapbox-gl'\r\nimport React, { Component } from 'react';\r\n\r\nimport {getHighestValue} from './Helpers.js'\r\n//import geojson from 'geojson'\r\nexport default class MapFunctionsVancouver extends Component {\r\n\r\n    // set to 2017 initially despite play preview or you get a bug when using the type dropdown\r\n    m_initiated = false\r\n    map = null\r\n\r\n\r\n    tooltipContainer\r\n    popup\r\n\r\n    m_tilesets\r\n     init() {\r\n        if (!this.m_initiated) {\r\n\r\n            var center = []\r\n            switch(this.props.city){\r\n                case \"Vancouver\":\r\n                    this.m_tilesets = [\r\n                        {\"year\":1996, \"id\": \"mapbox://norahama.1jokwrkx\", \"sourcelayer\" : \"Vancouver2006-2eyjv2\", \"sourceName\":\"source1996\"},\r\n                        {\"year\":2006, \"id\":\"mapbox://norahama.1jokwrkx\", \"sourcelayer\" : \"Vancouver2006-2eyjv2\", \"sourceName\":\"source2006\"},\r\n                        {\"year\":2016, \"id\": \"mapbox://norahama.2pk73wv6\", \"sourcelayer\" : \"Vancouver2016-1nzu7l\", \"sourceName\":\"source2016\"}\r\n                    ]\r\n                    \r\n                    center = [-122.576, 49.028]\r\n                    break;\r\n                case \"Melbourne\":\r\n                    this.m_tilesets = [\r\n                        // \"2001\":{\"id\": \"mapbox:/norahama.anl71j5p\", \"sourcelayer\" : \"Melbourne2001-23s20v\"},\r\n                         {\"year\":2006,\"id\": \"mapbox://norahama.bm41q2of\", \"sourcelayer\" : \"Melbourne2006-6b3o6h\", \"sourceName\" : \"source2006\"},\r\n                         {\"year\":2011,\"id\": \"mapbox://norahama.dzjhyft8\", \"sourcelayer\" : \"Melbourne2011-csnnwo\", \"sourceName\" : \"source2011\"},\r\n                         {\"year\":2016,\"id\":  \"mapbox://norahama.cc4vdfad\", \"sourcelayer\" : \"Melbourne2016-47i90b\", \"sourceName\" :\"source2016\"}\r\n                ]\r\n                     center =  [144.96,-37.84]\r\n                    break;\r\n                case \"Auckland\":\r\n                   this.m_tilesets = [\r\n                        {\"year\":1996,\"id\": \"mapbox://norahama.deq4a9rw\", \"sourcelayer\" : \"AucklandShape-19n187\", \"sourceName\" : \"source1996\"},\r\n                        {\"year\":2013,\"id\": \"mapbox://norahama.deq4a9rw\", \"sourcelayer\" : \"AucklandShape-19n187\", \"sourceName\" : \"source2013\"}\r\n                \r\n                   ]\r\n                    center =  [174.76,-36.84]\r\n                    break;\r\n                case \"Sydney\":\r\n                    this.m_tilesets = [\r\n                        {\"year\":2001,\"id\": \"mapbox://norahama.8m5ctm9s\", \"sourcelayer\" : \"Sydney2001-2hwwxg\", \"sourceName\" : \"source2001\"},\r\n                        {\"year\":2006,\"id\":  \"mapbox://norahama.6tv4znv6\", \"sourcelayer\" : \"Sydney2006-6nogcm\", \"sourceName\" : \"source2006\"},\r\n                        {\"year\":2011,\"id\":  \"mapbox://norahama.dmybv4hi\", \"sourcelayer\" : \"Sydney2011-6m951w\", \"sourceName\" : \"source2011\"},\r\n                        {\"year\":2016,\"id\":  \"mapbox://norahama.darbn0un\", \"sourcelayer\" : \"Sydney2016-71t1cr\", \"sourceName\" : \"source2016\"}\r\n                    ]\r\n                    center =  [151.21, -33.87]\r\n                    break;\r\n            }\r\n          //  console.log(centerData)\r\n            mapboxgl.accessToken = \"pk.eyJ1Ijoibm9yYWhhbWEiLCJhIjoiY2ptaGFsZDR5MThrczN1dDhtajc1cTFmMSJ9.VEUImGmfsM77LfjErYxDdQ\"\r\n            this.map = new mapboxgl.Map({\r\n                container: \"map\",\r\n                style: \"mapbox://styles/norahama/ckcoa4nbq00zr1imv7shjhzo1\",\r\n                zoom: [10],\r\n                center: center\r\n            })\r\n\r\n          \r\n            this.map.on('load', () => {\r\n                // add source and layer for museums\r\n\r\n                this.map.addSource('centerData', {\r\n                    type: 'geojson',\r\n                    data: this.props.data,\r\n                    cluster: false\r\n                })\r\n                \r\n                for(var i = 0; i < this.m_tilesets.length; i++){\r\n                    this.map.addSource(this.m_tilesets[i].sourceName, {\r\n                        type:'vector',\r\n                        url: this.m_tilesets[i].id\r\n                    })\r\n\r\n                }\r\n             \r\n     /*           this.map.addLayer({\r\n                    id: 'vanc3d',\r\n                    type: 'fill-extrusion',\r\n                    source: 'vancouver2016',\r\n                    layout: {\r\n                        visibility: 'none'\r\n                    },\r\n                    'source-layer': this.m_tilesets[\"2016\"].sourcelayer,\r\n                    paint: {\r\n                        'fill-extrusion-height':\r\n                            [\r\n                                'match',\r\n                                ['get', 'CSDUID'],\r\n                                \"5915840\", 500,\r\n                                \"5915830\", 500,\r\n                                \"5915825\", 1800,\r\n                                \"5915816\", 200,\r\n                                \"5915813\", 4000,\r\n                                0\r\n                            ],\r\n                        'fill-extrusion-color': [\r\n                            'match',\r\n                            ['get', 'CSDUID'],\r\n                            \"5915840\", \"#d41111\",\r\n                            \"5915830\", \"#d41111\",\r\n                            \"5915825\", \"#d41111\",\r\n                            \"5915816\", \"#d41111\",\r\n                            \"5915813\", \"#d41111\",\r\n                            \"#888281\"\r\n                        ]\r\n                        ,\r\n                        \"fill-extrusion-opacity\": 0.7\r\n                    }\r\n                })*/\r\n                var index = -1\r\n                for(i = 0; i<this.m_tilesets.length; i++){\r\n                    if(this.m_tilesets[i].year==this.props.year){\r\n                        index=i;\r\n                        break;\r\n                    }\r\n                }\r\n                this.map.addLayer({\r\n                    id: 'fill'+this.props.year,\r\n                    type: 'fill',\r\n                    source: this.m_tilesets[index].sourceName,   \r\n                    layout: {\r\n                        // make layer visible by default\r\n                        visibility: 'visible',\r\n                    },\r\n                    'source-layer': this.m_tilesets[index].sourcelayer,                    \r\n                    paint: {\r\n                        'fill-color': \r\n                            \"#888281\"\r\n                        ,\r\n                        'fill-outline-color': \"black\",\r\n                        \"fill-opacity\": 0.4\r\n                    }\r\n\r\n                });\r\n            \r\n                this.map.addLayer({\r\n                    id: 'bars' + this.props.year,\r\n                    type: 'fill-extrusion',\r\n                    source: \"centerData\",\r\n                    layout: {\r\n                        // make layer visible by default\r\n                        visibility: 'visible',\r\n                    },\r\n                   // 'source-layer': this.m_tilesets[ this.props.year].sourcelayer,\r\n                    paint: {\r\n                        'fill-extrusion-color': ['get','color'],\r\n                        'fill-extrusion-height': [\"to-number\", ['get',this.props.heightParam]] ,\r\n                        'fill-extrusion-opacity': 0.7\r\n                    }\r\n\r\n                })\r\n    \r\n\r\n         /*       this.map.on('mouseenter', 'layer2016', function (e) {\r\n                    // Change the cursor style as a UI indicator.\r\n                    //    console.log(\"enter: \" + e.features[0].properties.site)\r\n                    if (message !== e.features[0].properties) {\r\n                        message = e.features[0].properties\r\n                 //           console.log(e.features[0])\r\n                        //  console.log(e.lngLat.wrap())\r\n                    }\r\n                    //      console.log(e)\r\n                    if (!onlyOnce) {\r\n\r\n\r\n\r\n                  //      self.randomiseData();\r\n                        var newgeoJson = []\r\n                        //get centers\r\n\r\n                     \r\n               \r\n               \r\n                        //create Polygon JSON from available data\r\n                       var newgeoJson = []\r\n                        var features = self.map.queryRenderedFeatures({ layers: ['layer2016'] })\r\n\r\n                  //      console.log(features)\r\n                        for (var i = 0; i < features.length; i++) {\r\n                            var poly = features[i].geometry.coordinates[0]\r\n                            var input = []\r\n                         //   console.log(poly)\r\n                            for (var j = 0; j < poly.length; j++) {\r\n                                \r\n                                input.push({ \"latitude\": poly[j][1], \"longitude\": poly[j][0] })\r\n                            } \r\n                          //  console.log(input)\r\n                      \r\n                            if(input.length > 1) {\r\n                             var center = geolib.getCenter(input)\r\n                          //   console.log(center)\r\n                             if(!isNaN(center.longitude) && !isNaN(center.latitude)){\r\n                           //  newgeoJson.push({ 'type': 'Feature', 'geometry': { \"type\":\"Point\",\"coordinates\":[center.longitude,center.latitude] }})\r\n                                var circlepoly = turf.circle([center.longitude,center.latitude], 0.3, { steps: 20 })\r\n                                newgeoJson.push({ 'type': 'Feature', 'geometry': circlepoly.geometry,'properties': { 'id':features[i].id, 'properties':features[i].properties, 'color':self.m_colors[Math.floor(Math.random() * Math.floor(7))],'height':  Math.floor(Math.random() * (20000 - 5000)) + 5000}})\r\n                             }\r\n                            }\r\n                \r\n                        }\r\n      \r\n                        var FinalJson = { \"type\": \"FeatureCollection\", \"features\": newgeoJson }\r\n                        console.log(JSON.stringify(FinalJson))  \r\n                        onlyOnce = true\r\n                    }\r\n                })\r\n                this.map.on('mousemove', 'vancCirc', function (e) {\r\n                    // Change the cursor style as a UI indicator.\r\n                    //    console.log(\"enter: \" + e.features[0].properties.site)\r\n                    if (message !== e.features[0].properties) {\r\n                        message = e.features[0].properties\r\n                        //       console.log(e.features[0].properties)\r\n                    }\r\n\r\n                })\r\n\r\n                this.map.on('mouseleave', 'vanc', function (e) {\r\n                    // Change the cursor style as a UI indicator.\r\n                    //    console.log(\"enter: \" + e.features[0].properties.site)\r\n                    console.log(\"out\")\r\n                    message = \"\"\r\n\r\n                })*/\r\n\r\n\r\n\r\n            })\r\n            // Change the cursor style as a UI indicator.\r\n            this.map.getCanvas().style.cursor = 'pointer';\r\n            this.m_initiated = true;\r\n\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    //data wrangling\r\n   \r\n    updateDataset() {\r\n\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.tooltipContainer = document.createElement('div');\r\n        if(this.props.data!==[]) {\r\n            console.log(\"MapComponent Got Data\")\r\n            this.init()\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(this.props.data!==[]){\r\n            //console.log(this.props.data)\r\n            this.init()\r\n        }\r\n        //city changed, load the correct sources and layers for the new city.\r\n        if(this.props.city!==prevProps.city){\r\n            this.m_initiated =false;\r\n            this.init()\r\n        }\r\n        //console.log(this.props.data)\r\n        if(this.props.heightParam !== prevProps.heightParam) {\r\n            // 'fill-extrusion-height': [\"to-number\", ['get',this.props.heightParam]] ,\r\n            //console.log(this.props.heightParam)\r\n            console.log(this.props.data)\r\n            /*  m_long_indices = [\"Population\",\r\n  \"Ethnicity-raw-count\",\r\n  \"Ethnicity-count\",\r\n  \"Ethnicity-index\",\r\n  \"Ethnicity-raw-normalized\",\r\n  \"Ethnicity-raw-norm\",\r\n  \"Ethnicity-norm\",\r\n  \"Ethnicity-norm-index\",\r\n  \"Mobility-raw-pct\",\r\n  \"Mobility-pct\",\r\n  \"Mobility-index\",\r\n  \"Generation-raw-SI\",\r\n  \"Generation-SI\",\r\n  \"Generation-index\",\r\n  \"Income-raw-SI\",\r\n  \"Income-SI\",\r\n  \"Education-raw-SI\",\r\n  \"Education-SI\",\r\n  \"Income-index\",\r\n  \"Education-index\",\r\n  \"Income-SE\",\r\n  \"Immig-category-index\",\r\n  \"Immig-category-raw-SI\",\r\n  \"Total-pop\"]*/\r\n         \r\n            var val = getHighestValue(this.props.data,this.props.heightParam)\r\n            this.map.setPaintProperty('bars' + this.props.year,'fill-extrusion-height', [\"*\",[\"/\",[\"to-number\", ['get',this.props.heightParam]],val],5000])\r\n            \r\n          \r\n        }\r\n        if(this.map.getSource(\"centerData\"))\r\n            this.map.getSource(\"centerData\").setData(this.props.data)\r\n    }\r\n    render() {\r\n        return (\r\n\r\n            <div style={{ height: this.props.height }} className=\"mapContainer\" id=\"map\" />\r\n\r\n        )\r\n    }\r\n\r\n    \r\n\r\n}\r\n\r\n\r\n/*\r\nThe data stays the same except for the radius of the polygon.\r\n\r\nThe thing that changes is the paint.\r\n\r\nHeight, colour, possibly opacity, and radius can change based on different attributes.\r\n\r\nAs attributes change based on the input:\r\na) Normalise the data field\r\nb) map the data field to the chosesn attribute \r\n\r\n\r\n*/","export function getHighestValue(data, parameter ){\r\n    //Toan:\r\n    //  barHeight = Math.max(value * currData.json.scale[col] * feature.scale, 10)\r\n    var highest= -1\r\n    for(var i = 0; i < data.features.length; i ++){\r\n        if ( data.features[i].properties[parameter] > highest) \r\n            highest = data.features[i].properties[parameter]\r\n    }\r\n    return highest;\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class MapFunctions extends Component {\r\n\r\n\r\n \r\n\r\n    state = {\r\n        subItem: {},\r\n        city: \"\",\r\n        year: 2006,\r\n        width: \"Ethnicity-index\",\r\n        height: \"Population\",\r\n        color: \"Income-index\",\r\n        bivariate: [\"Ethnicity-index\",\"Income-index\"],\r\n        activeWidth: false,\r\n        activeHeight:true,\r\n        activeColor:false,\r\n        activeBivariate: false\r\n    }\r\n  render() {\r\n    return (\r\n        <div className=\"menu\">\r\n            <div className=\"citySection\">\r\n            <span>City: </span>\r\n                <select className=\"cityDropdown\" value={this.state.city} onChange={this.handleChange}>\r\n                    {this.props.cities.map(\r\n                        (city, i) =>\r\n                         <option key={\"city\"+i} value={city.name}>{city.name}</option>\r\n                    )}\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"yearSection\">\r\n                <span>Year: </span>\r\n                <div className=\"yearbuttons\">\r\n                    {   this.state.subItem.years ? \r\n                            this.state.subItem.years.map(\r\n                                (item,i) =>\r\n                                    <div onClick={() => this.toggleActive(item)} className={`yearButton ${this.state.year==item? \"yearButton_active\": \"\"}`} key={\"yearButton\"+i}>{item} </div>\r\n                            \r\n                            )\r\n                        : \"Loading...\"\r\n                    }\r\n                </div>\r\n            </div>\r\n            \r\n            <div className=\"attributeSection\">\r\n                <span>Bar Attributes: </span>\r\n                {this.state.subItem.indices ? \r\n                    <div className=\"attributeGroup\">\r\n                    <AttributeSection children = {this.state.subItem.indices} title=\"Width\" app={this} def={this.state.width} callback={this.changeWidth} active={this.state.activeWidth}/>\r\n                    <AttributeSection children = {this.state.subItem.indices} title=\"Height\" app={this} def={this.state.height} callback={this.changeHeight}active={this.state.activeHeight}/>\r\n                    <AttributeSection children = {this.state.subItem.indices} title=\"Color\" app={this} def={this.state.color} callback={this.changeColor}active={this.state.activeColor}/>\r\n                    <AttributeSection children = {this.state.subItem.indices} title=\"Bivariate\" app={this} def={this.state.bivariate} callback1={this.changeBivariate1} active={this.state.activeBivariate}callback2={this.changeBivariate1}/>\r\n                    </div>\r\n                    : \r\n                    \"Loading...\"\r\n                }\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nchangeWidth = (event) => {\r\n    console.log(event.target.value + \" width\")\r\n    this.setState({\r\n        width: event.target.value\r\n    })\r\n    this.props.callbackF(\"width\",event.target.value)\r\n}\r\n\r\nchangeHeight = (event) => {\r\n    this.setState({\r\n        height: event.target.value\r\n    })\r\n    this.props.callbackF(\"height\",event.target.value)\r\n}\r\n\r\nchangeColor = (event) => {\r\n    this.setState({\r\n        color: event.target.value\r\n    })\r\n    this.props.callbackF(\"color\",event.target.value)\r\n}\r\n\r\nchangeBivariate1 = (event) => {\r\n    var arr = this.state.bivariate\r\n    arr[0]=event.target.value\r\n    this.setState({\r\n        bivariate: arr\r\n    })\r\n    this.props.callbackF(\"bivariate1\",event.target.value)\r\n}\r\n\r\nchangeBivariate2 = (event) => {\r\n    var arr = this.state.bivariate\r\n    arr[1]=event.target.value\r\n    this.setState({\r\n        bivariate: arr\r\n    })\r\n    this.props.callbackF(\"bivariate2\",event.target.value)\r\n}\r\n\r\ncomponentDidUpdate(){\r\n   // console.log(this.props.cities)\r\n    //console.log(this.state)\r\n}\r\ncomponentDidMount(){\r\n    console.log(this.props.cities)\r\n    console.log(this.props.currentCity)\r\n    console.log(this.props.currentYear)\r\n    for(var i = 0; i < this.props.cities.length; i++){\r\n        if(this.props.cities[i].name===this.props.currentCity){\r\n           \r\n            this.setState({\r\n                subItem: this.props.cities[i],\r\n                city: this.props.currentCity,\r\n                year: this.props.currentYear\r\n            })\r\n            break;\r\n        }\r\n    }\r\n}\r\n\r\ntoggleActive = (y) => {\r\n    this.setState({\r\n        year: y\r\n    })\r\n    console.log(y)\r\n    this.props.callbackF(\"year\",y)\r\n}\r\n\r\ntoggleAttribute = (attr) => {\r\n    switch(attr){\r\n        case\"Width\":\r\n        this.setState(prevState => ({\r\n            activeWidth: !prevState.activeWidth\r\n        }));\r\n        break;\r\n        case\"Height\":\r\n        this.setState(prevState => ({\r\n            activeHeight: !prevState.activeHeight\r\n        }));\r\n        break;\r\n        case\"Color\":\r\n        this.setState(prevState => ({\r\n            activeColor: !prevState.activeColor\r\n        }));\r\n        break;\r\n        case\"Bivariate\":\r\n        \r\n        this.setState(prevState => ({\r\n            activeBivariate: !prevState.activeBivariate\r\n        }));\r\n        this.props.callbackF(\"bivToggle\",true)\r\n        break;\r\n    }\r\n}\r\nhandleChange =(event)=>{\r\n    this.props.callbackF(\"city\",event.target.value)\r\n    for(var i = 0; i < this.props.cities.length; i++){\r\n        if(this.props.cities[i].name===event.target.value){\r\n            this.setState({\r\n                subItem: this.props.cities[i],\r\n                city: event.target.value,\r\n                year: this.props.cities[i].years[0]\r\n            })\r\n        }\r\n    }\r\n   \r\n}\r\n\r\n\r\n\r\n}\r\nconst AttributeSection = ({title, children, def, app, callback, callback1, callback2, active}) => (\r\n\r\n\r\n        <div onClick={() => app.toggleAttribute(title)} className = {`attributePanel ${active ? \"attributePanel_active\": \"\"}`}>\r\n            <div  className=\"attributeLabel\"> {title}</div>    \r\n            {title!==\"Bivariate\" ? \r\n                <select className=\"attributeDropdown\" value={def} onChange={callback}>\r\n                    {children.map(\r\n                        (child, i) =>\r\n                         <option key={\"child\"+i} value={child}>{child}</option>\r\n                    )}\r\n                </select>\r\n             \r\n            :   \r\n            <div className=\"bivariateGroup\">\r\n                <select className=\"attributeDropdown\" value={def[0]} onChange={callback1}>\r\n                    {children.map(\r\n                    (child, i) =>\r\n                     <option key={\"child\"+i} value={child}>{child}</option>\r\n                    )}\r\n                </select>\r\n                <select className=\"attributeDropdown\" value={def[1]} onChange={callback2}>\r\n                {children.map(\r\n                    (child, i) =>\r\n                    <option key={\"child\"+i} value={child}>{child}</option>\r\n                 )}\r\n                </select>\r\n            </div>\r\n\r\n            }\r\n             \r\n        </div>\r\n    \r\n)\r\n      ","\nimport React, { Component } from 'react';\nimport './App.css';\nimport MapFunctions from './MapFunctions';\n\n\n//data\nimport centerData96Auckland from './data/Auckland/Auck1996___min.json'\nimport centerData13Auckland from './data/Auckland/Auck2013___min.json'\n\nimport centerData06Melb from './data/Melbourne/Melb06_____min.json'\nimport centerData11Melb from './data/Melbourne/Melb11_____min.json'\nimport centerData16Melb from './data/Melbourne/Melb16_____min.json'\n\n\nimport centerData2001Syd from './data/Sydney/Syd01___m__min.json'\nimport centerData2006Syd from './data/Sydney/Syd06___m__min.json'\nimport centerData2011Syd from './data/Sydney/Syd11___m__min.json'\nimport centerData2016Syd from './data/Sydney/Syd16___m__min.json'\n\nimport centerData96Vanc from './data/Vancouver/Vanc96_____min.json'\nimport centerData06Vanc from './data/Vancouver/Vanc06_____min.json'\nimport centerData16Vanc from './data/Vancouver/Vanc16_____min.json'\n\nimport bivariateImage from './images/bivariate_scheme1.png'\nimport Menu  from './Menu';\nimport * as turf from '@turf/turf'\n\nimport getHighestValue from './Helpers.js'\nexport default class App extends Component { \n  \n\n\n\n  m_datasets = [ \n    centerData96Auckland,\n    centerData13Auckland,\n    centerData06Melb,\n    centerData11Melb,\n    centerData16Melb,\n    centerData2001Syd,\n    centerData2006Syd,\n    centerData2011Syd,\n    centerData2016Syd,\n    centerData96Vanc,\n    centerData06Vanc,\n    centerData16Vanc\n  ]\n  m_biVariateColors = {\n      \"00\": \"#e8e8e8\",\n      \"01\": \"#b0d5df\",\n      \"02\": \"#64acbe\",\n      \"10\": \"#e4acac\",\n      \"11\": \"#ad9ea5\",\n      \"12\": \"#627f8c\",\n      \"20\": \"#c85a5a\",\n      \"21\": \"#985356\",\n      \"22\": \"#574249\"\n  }\n  m_selectorStructure = {\n    \"Melbourne\":{\n      \"2006\": centerData06Melb,\n      \"2011\":centerData11Melb,\n      \"2016\":centerData16Melb\n    },\n    \"Vancouver\":{\n      \"1996\": centerData96Vanc,\n      \"2006\":centerData06Vanc,\n      \"2016\":centerData16Vanc\n    },\n    \"Auckland\":{\n      \"1996\": centerData96Auckland,\n      \"2013\":centerData13Auckland,\n\n    },\n    \"Sydney\":{\n      \"2001\":centerData2001Syd,\n      \"2006\": centerData2006Syd,\n      \"2011\":centerData2011Syd,\n      \"2016\":centerData2016Syd\n    }\n  }\n\n  m_long_indices = [\"Population\",\n  \"Ethnicity-raw-count\",\n  \"Ethnicity-count\",\n  \"Ethnicity-index\",\n  \"Ethnicity-raw-normalized\",\n  \"Ethnicity-raw-norm\",\n  \"Ethnicity-norm\",\n  \"Ethnicity-norm-index\",\n  \"Mobility-raw-pct\",\n  \"Mobility-pct\",\n  \"Mobility-index\",\n  \"Generation-raw-SI\",\n  \"Generation-SI\",\n  \"Generation-index\",\n  \"Income-raw-SI\",\n  \"Income-SI\",\n  \"Education-raw-SI\",\n  \"Education-SI\",\n  \"Income-index\",\n  \"Education-index\",\n  \"Income-SE\",\n  \"Immig-category-index\",\n  \"Immig-category-raw-SI\",\n  \"Total-pop\"]\nm_short_indices = [\"a\", \"b\",\"ba\",\"c\",\"d\",\"da\",\"db\",\"e\",\"f\",\"fa\",\"g\",\"h\",\"ha\",\"i\",\"j\",\"ja\",\"k\",\"ka\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\"]\n  m_menu_structure =  [ \n      {\"name\":\"Melbourne\",\n      \"years\": [2006,2011,2016],\n      \"indices\": [\"Population\", \"Ethnicity-raw-count\",\t\"Ethnicity-index\",\t\"Ethnicity-raw-normalized\",\t\"Ethnicity-norm-index\",\t\"Mobility-raw-pct\",\t\"Mobility-index\",\t\"Generation-raw-SI\",\n    \t  \"Generation-index\",\t\"Income-raw-SI\",\t\"Income-index\",\t\"Education-raw-SI\",\t\"Education-index\"],\n      },\n     { \n      \"name\":\"Sydney\",\n      \"years\": [ 2001,2006,2011,2016],\n      \"indices\":  [\"Population\", \"Ethnicity-raw-count\",\t\"Ethnicity-index\",\t\"Ethnicity-raw-normalized\",\t\"Ethnicity-norm-index\",\t\"Mobility-raw-pct\",\t\"Mobility-index\",\t\"Generation-raw-SI\",\n      \"Generation-index\",\t\"Income-raw-SI\",\t\"Income-index\",\t\"Education-raw-SI\",\t\"Education-index\"],\n    },\n     { \n      \"name\": \"Vancouver\",\n      \"years\": [1996,2006,2016],\n      \"indices\" : [\"Population\", \"Ethnicity-raw-count\",\t\"Ethnicity-index\",\t\"Ethnicity-norm-index\",\t\"Mobility-raw-pct\",\t\"Mobility-index\",\t\"Generation-raw-SI\",\n      \"Generation-index\",\t\"Income-raw-SI\",\t\"Income-index\",\t\"Education-raw-SI\",\t\"Education-index\",\"Income-SE\",\"Ethnicity-raw-norm\",\"Immig-category-raw-SI\",\t\"Immig-category-index\"\t],\n    },\n    { \n      \"name\": \"Auckland\",\n      \"years\":[1996,2013],\n      \"indices\" : [\"Population\",\"Ethnicity-count\",\t\"Ethnicity-index\",\t\"Ethnicity-norm\",\t\"Ethnicity-norm-index\",\t\"Mobility-pct\",\t\"Mobility-index\",\t\"Generation-SI\",\t\"Generation-index\",\t\"Income-SI\",\t\"Income-index\",\n    \t\"Education-SI\",\t\"Education-index\"]\n    }]\n  \n\n  componentDidMount(){\n   // d3.csv(vancData).then(this.updateStateData);\n \n    \n  \n    //convert points in the datasets to polygons\n    for(var i = 0; i < this.m_datasets.length; i++){\n      this.m_datasets[i] = this.prepDatasets(this.m_datasets[i], 0.3)\n    }\n    \n    console.log(centerData06Vanc)\n    //initial dataset \n    this.setState({\n      data:centerData06Vanc\n     })\n  }\n\n  // preps the datasets for usage. Creates circle polygons to extrude as columns, initially all with the same width, and replaces the shortened indices with their proper ones for labelling etc.\n  prepDatasets = (dataset, width) => {\n    var features = dataset.features\n    var circlepoly, newGeometry, i, j\n    for( i = 0; i < features.length; i ++){\n  \n      circlepoly = turf.circle([features[i].geometry.coordinates[0],features[i].geometry.coordinates[1]], width, { steps: 12 })\n      newGeometry = circlepoly.geometry\n      features[i].geometry = newGeometry\n      var propertyKeys = Object.keys(features[i].properties)\n\n      for(j = 0; j < propertyKeys.length; j++){\n        if(this.m_short_indices.indexOf(propertyKeys[j]) >= 0) {\n          //console.log(propertyKeys[j])\n          features[i].properties[this.m_long_indices[this.m_short_indices.indexOf(propertyKeys[j])]] = features[i].properties[propertyKeys[j]]\n          delete features[i].properties[propertyKeys[j]]\n        }\n      }\n    }\n    return dataset\n  }\n\n  renameKey = (object,key,newKey) => {\n   //console.log(key + \" -- \" + newKey)\n    if(newKey!== undefined){\n      var clonedObj = clone(object);\n      var targetKey = clonedObj[key];\n      delete clonedObj[key];\n      clonedObj[newKey] = targetKey;\n    return clonedObj;\n    } else {\n      return object\n    }\n  }\n   state = {\n    data: [],\n    city: \"Vancouver\",\n    year: \"2006\",\n    heightParameter: \"Population\",\n    showBivariate: false,\n    showColor: true\n  }\n  menuCallback= (label, content) => {\n    //console.log(label)\n    //console.log(content)\n    if(label===\"city\"){\n      console.log(this.m_selectorStructure[content][Object.keys(this.m_selectorStructure[content])[0]])\n      this.setState({\n        city:content,\n        year: Object.keys(this.m_selectorStructure[content])[0], //take the first available year of the new city\n        data: this.m_selectorStructure[content][Object.keys(this.m_selectorStructure[content])[0]]\n      })\n    } else if(label===\"year\"){\n      this.setState({\n        year: content,\n        data: this.m_selectorStructure[this.state.city][content]\n      })\n    } else if(label===\"bivToggle\"){\n      this.setState(prevState => ({\n        showBivariate: !prevState.showBivariate\n      }))\n    } \n    else if(label===\"colorToggle\"){\n      this.setState(prevState => ({\n        showColor: !prevState.showColor\n      }))\n    } \n    else if (label==\"height\"){\n      this.calculateHeights(content)\n    }\n  }\n\n  calculateHeights(parameter){\n    console.log(parameter)\n    this.setState({\n      heightParameter: parameter\n    })\n  }\n \n\n  // determines which map will be loaded.\n  \n\n\n  render() {\n    \n    return( \n\n    <div className=\"App\">\n      <div className=\"Container\">\n      {this.state.showBivariate ? <div id=\"bivariateImage\"><img id=\"bivImg\" src={bivariateImage} alt=\"bivariateScheme\" /></div> : \"\"}\n      <Menu callbackF={this.menuCallback} cities={this.m_menu_structure} currentCity={this.state.city} currentYear={this.state.year}/>\n      <MapFunctions height={800} data={this.state.data} year={this.state.year} city={this.state.city} heightParam={this.state.heightParameter}/>\n     \n      \n      </div>\n   \n    </div>\n    )\n  }\n}\n\nconst clone = (obj) => Object.assign({}, obj);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'mapbox-gl/dist/mapbox-gl.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}